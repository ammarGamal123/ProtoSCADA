// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProtoSCADA.Data.Context;

#nullable disable

namespace ProtoSCADA.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241230090714_AddLineAndReportTablesToProject")]
    partial class AddLineAndReportTablesToProject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Alert", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte>("Condition")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineID")
                        .HasColumnType("int");

                    b.Property<float>("ThersholdValue")
                        .HasColumnType("real");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MachineID");

                    b.HasIndex("UserID");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MachineID");

                    b.HasIndex("UserID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Factory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Factorys");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Line", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactoryID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FactoryID");

                    b.HasIndex("ReportID");

                    b.HasIndex("SupervisorID");

                    b.ToTable("Lines");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Machine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FactoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastMaintance")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LineID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactoryID");

                    b.HasIndex("LineID");

                    b.HasIndex("ReportID");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Metric", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MachineID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("MachineID");

                    b.HasIndex("ReportID");

                    b.ToTable("Metrics");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Report", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CreatedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactoryID")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByUserID");

                    b.HasIndex("FactoryID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FactoryID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Alert", b =>
                {
                    b.HasOne("ProtoSCADA.Entities.Entities.Machine", "Machine")
                        .WithMany("Alerts")
                        .HasForeignKey("MachineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProtoSCADA.Entities.Entities.User", null)
                        .WithMany("Alerts")
                        .HasForeignKey("UserID");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Event", b =>
                {
                    b.HasOne("ProtoSCADA.Entities.Entities.Machine", "Machine")
                        .WithMany("Events")
                        .HasForeignKey("MachineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProtoSCADA.Entities.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Line", b =>
                {
                    b.HasOne("ProtoSCADA.Entities.Entities.Factory", "Factory")
                        .WithMany()
                        .HasForeignKey("FactoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProtoSCADA.Entities.Entities.Report", null)
                        .WithMany("Lines")
                        .HasForeignKey("ReportID");

                    b.HasOne("ProtoSCADA.Entities.Entities.User", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factory");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Machine", b =>
                {
                    b.HasOne("ProtoSCADA.Entities.Entities.Factory", "Factory")
                        .WithMany("Machines")
                        .HasForeignKey("FactoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProtoSCADA.Entities.Entities.Line", null)
                        .WithMany("Machines")
                        .HasForeignKey("LineID");

                    b.HasOne("ProtoSCADA.Entities.Entities.Report", null)
                        .WithMany("Machines")
                        .HasForeignKey("ReportID");

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Metric", b =>
                {
                    b.HasOne("ProtoSCADA.Entities.Entities.Machine", "Machine")
                        .WithMany("Metrics")
                        .HasForeignKey("MachineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProtoSCADA.Entities.Entities.Report", null)
                        .WithMany("Metrics")
                        .HasForeignKey("ReportID");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Report", b =>
                {
                    b.HasOne("ProtoSCADA.Entities.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProtoSCADA.Entities.Entities.Factory", "Factory")
                        .WithMany()
                        .HasForeignKey("FactoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.User", b =>
                {
                    b.HasOne("ProtoSCADA.Entities.Entities.Factory", null)
                        .WithMany("Users")
                        .HasForeignKey("FactoryID");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Factory", b =>
                {
                    b.Navigation("Machines");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Line", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Machine", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Events");

                    b.Navigation("Metrics");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.Report", b =>
                {
                    b.Navigation("Lines");

                    b.Navigation("Machines");

                    b.Navigation("Metrics");
                });

            modelBuilder.Entity("ProtoSCADA.Entities.Entities.User", b =>
                {
                    b.Navigation("Alerts");
                });
#pragma warning restore 612, 618
        }
    }
}
